#include <stdio.h>
#include <time.h>

enum month { jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec };
enum day { sun, mon, tue, wed, thu, fri, sat };

int getDaysInMonth(int year, int month) 
{
    int daysInMonth[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
        daysInMonth[2] = 29;
    
    return daysInMonth[month];
}

int DdayDate(int year, int month, int d) 
{
    int daysInMonth[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    int i;
    
    int totalDays = ((year - 1) * 365 + (year - 1) / 4 - (year - 1) / 100 + (year - 1) / 400); 

    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
        daysInMonth[2] = 29; 

    for (i = 1; i < month; i++) {
        totalDays += daysInMonth[i];
    }
    
    totalDays += d;
    
    return totalDays;
}

void printCalendar(int year, int month)
{
    char days[][10] = {"S", "M", "T", "W", "T", "F", "S"};
    int d;

    printf("\n%d년 %d월\n", year, month);

    for (d = sun; d <= sat; d++) {
        printf("%2s ", days[d]);
    }    
    printf("\n");

    int basestartingday = (year * 365 + (year - 1) / 4 - (year - 1) / 100 + (year - 1) / 400) % 7;
    int totaldays = 0;
    
    for (int k = 1; k < month; k++) {
        totaldays += getDaysInMonth(year, k);
    }
     
    int startingday = (basestartingday + totaldays) % 7; 
        
    for (int i = 0; i < startingday; i++) {
        printf("   ");
    }
        
    for (int j = 1; j <= getDaysInMonth(year, month); j++) {
        printf("%2d", j);
        if ((startingday + j) % 7 == 0) {
            printf("\n");
        } else {
            printf(" ");
        }
    }   
    printf("\n");
}

void calculateDday(void)
{
    time_t t = time(NULL);
    struct tm *now = localtime(&t);
    int currentYear  = now->tm_year + 1900;
    int currentMonth = now->tm_mon + 1;
    int currentDay   = now->tm_mday;
    
    printf("\n오늘 날짜: %d년 %d월 %d일\n", currentYear, currentMonth, currentDay);
    
    int year, month, day;
    printf("D-day 계산 하고 싶은 날 입력\n");
    printf("연도 입력: ");
    scanf("%d", &year);
    printf("월 입력: ");
    scanf("%d", &month);
    printf("일 입력: ");
    scanf("%d", &day);
    
    int targetTotal = DdayDate(year, month, day);
    int todayTotal  = DdayDate(currentYear, currentMonth, currentDay);
    int diffDays = targetTotal - todayTotal;
    
    printf("D-day: %d일 남았습니다\n", diffDays);
}

void main()
{
    int year, month;
    printf("year를 입력하세요 : ");
    scanf("%d", &year);
    printf("month를 입력하세요: ");
    scanf("%d", &month);
    printCalendar(year, month);
    calculateDday();
}

